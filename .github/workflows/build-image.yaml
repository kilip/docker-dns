---
name: "Build Image"

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup workflow Variables
        id: vars
        shell: bash
        run: |-
          echo "build_date=$(date --rfc-3339=seconds --utc)" >> $GITHUB_OUTPUT
          echo "goss_args=tail -f /dev/null" >> $GITHUB_OUTPUT
          echo "tag_testing=testingz" >> $GITHUB_OUTPUT
          echo "tag_rolling=rolling" >> $GITHUB_OUTPUT

          date=$(date +'%Y%m%d%H%M%S')
          ref="${{ github.ref_name }}"
          tag_version="daily${date}"
          tags="${{ env.DOCKER_IMAGE }}:${tag_version}"
          if [[ $ref == v* ]]; then
            tag_version="${{ github.ref_name }}"
            tags="${{ env.DOCKER_IMAGE }}:${tag_version},${{env.DOCKER_IMAGE}}:latest"
          fi
          echo "tag_version=${tag_version}" >> $GITHUB_OUTPUT
          echo "tags=${tags}" >> $GITHUB_OUTPUT

      - name: Setup Goss
        uses: e1himself/goss-installation-action@v1.2.1
        with:
          version: v0.3.21

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image for testing
        uses: docker/build-push-action@v6
        with:
          build-args: |-
            VERSION=latest
          context: .
          platforms: linux/amd64
          load: true
          tags: ${{ env.DOCKER_IMAGE }}:testingz
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Goss tests
        id: dgoss
        shell: bash
        env:
          CONTAINER_RUNTIME: docker
          GOSS_FILE: ./docker/goss.yaml
          GOSS_OPTS: --retry-timeout 60s --sleep 2s --color --format documentation
          GOSS_SLEEP: 2
          GOSS_FILES_STRATEGY: cp
          CONTAINER_LOG_OUTPUT: goss_container_log_output
        run: dgoss run ${{ env.DOCKER_IMAGE }} ${{ steps.vars.outputs.goss_args }}

      - name: Build all platforms
        id: release
        uses: docker/build-push-action@v6
        with:
          labels: |-
            org.opencontainers.image.created="${{ steps.vars.outputs.build_date }}"
            org.opencontainers.image.title="docker-dns (stable)"
            org.opencontainers.image.version="${{ steps.vars.outputs.tag_version }}"
            org.opencontainers.image.authors="Anthonius Munthi <me@itstoni.com>"
            org.opencontainers.image.url="https://github.com/kilip/docker-dns"
            org.opencontainers.image.build.url="https://github.com/kilip/docker-dns/actions/runs/${{ github.run_id }}"
            org.opencontainers.image.documentation="https://github.com/kilip/docker-dns/README.md"
            org.opencontainers.image.revision="${{ github.sha }}"
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |-
            ${{ steps.vars.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
